
totem {
	version: 2
	cluster_name: {{ cluster.name }}
	# How long before declaring a token lost (ms)
	token: {{ cluster_token | default(3000) }}
	# How many token retransmits before forming a new configuration
	token_retransmits_before_loss_const: {{ cluster_retransmits | default(10) }}
	# Limit generated nodeids to 31-bits (positive signed integers)
	clear_node_high_bit: yes
{% if cluster.downcheck is defined %}
	#how long to wait before checking that a network interface is back up after it has been downed
	downcheck {{ cluster.downcheck | default(1000) }}
{% endif %}

	crypto_cipher: aes128
	crypto_hash: sha256
	ip_version: ipv4
	interface {
		linknumber: 0
		knet_transport: udp
		mcastport: {{ cluster.port | default(5400) }}
		ttl: 1
	}
{% if cluster.failsafe_port|default(False) %}
	interface {
		linknumber: 1
		knet_transport: udp
		mcastport: {{ cluster.failsafe_port }}
		ttl: 1
	}
{% endif %}
	transport: knet
}

logging {
	fileline: off
	to_stderr: no
	to_logfile: yes
	logfile: /var/log/corosync/corosync.log
	to_syslog: yes
	syslog_facility: daemon
	debug: {{ cluster.debug | default("off") }}
	timestamp: on
	logger_subsys {
		subsys: QUORUM
		debug: off
	}
}

nodelist {
{% for member in cluster.members %}
	node {
		nodeid: {{ loop.index }}
		name: {{ member.name }}
		ring0_addr: {{ member.addr }}
{% if member.failsafe_addr|default(False) %}
		ring1_addr: {{ member.failsafe_addr }}
{% endif %}
	}
{% endfor %}
}

quorum {
	provider: corosync_votequorum
{% if cluster.members|length == 2 %}
	two_node: 1
{% else %}
{% if cluster.members|length % 2 == 0 %}
	auto_tie_breaker: 1
	last_man_standing: 1
	last_man_standing_window: {{ cluster_last_man_standing_window }}
{% endif %}
{% endif %}
}
