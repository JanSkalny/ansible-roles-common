# {{ ansible_managed }}
{% macro generate_iface_config(iface, iface_name) %}
{% if 'ether' in iface %}
      match:
        macaddress: "{{ iface.ether }}"
      set-name: {{ iface_name }}
{% endif %}
{% if 'bond_master' in iface %}
      optional: true
{% endif %}
{% if 'address' in iface and iface.address != 'dhcp' %}
      link-local: []
      addresses: {{ [ iface.address ]}}
{% elif 'address' in iface and iface.address == 'dhcp' %}
      link-local: []
      dhcp4: yes
{% endif %}
{%if 'dns' in iface %}
      nameservers:
        addresses: {{ iface.dns }}
{% if 'dns-search' in iface %}
        search: {{ [ iface['dns-search'] ] }}
{% endif %}
{% endif %}
{% if 'mtu' in iface %}
      mtu: {{ iface.mtu }}
{% endif %}
{% if 'routes' in iface or 'gateway' in iface %}
      routes:
{% if 'gateway' in iface %}
       - to: 0.0.0.0/0
         via: {{ iface.gateway }}
{% endif %}
{% if 'routes' in iface %}
{% for route in iface.routes %}
       - to: {{ route.net }}
         via: {{ route.via }}
{% endfor %}
{% endif %}
{% endif %}
{% endmacro %}

network:
  version: 2
  ethernets:
{% for iface_name,item in networking.items() %}
{% if ( 'vlan-id' not in item or 'vlan-iface' not in item ) and 'bond_slaves' not in item and 'bridge_ports' not in item%}
    {{ iface_name }}: 
{{ generate_iface_config(item, iface_name) }}
{% endif %}
{% endfor %}

{% set vlans = networking | dict2items
    | selectattr("value.vlan-id", "defined")
    | selectattr("value.vlan-iface", "defined")
    | list %}
{% if vlans %}
  vlans:
{% for iface_name, item in vlans %}
    vlan{{ item['vlan-id'] }}:
      id: {{ item['vlan-id'] }}
      link: {{ item['vlan-iface'] }}
{{ generate_iface_config(item, "vlan%d" % item['vlan-id']) }}
{% endfor %}
{% endif %}

{% set bridges = networking | dict2items
    | selectattr("value.bridge_ports", "defined")
    | list %}
{% if bridges %}
  bridges:
{% for iface_name, item in bridges %}
    {{ iface_name }}:
      interfaces: {{ item.bridge_ports }}
      parameters:
        stp: false
        forward-delay: 0
{{ generate_iface_config(item, iface_name) }}
{% endfor %}
{% endif %}

{% set bonds = networking | dict2items
    | selectattr("value.bond_slaves", "defined")
    | list %}
{% if bonds %}
  bonds:
{% for iface_name, item in bonds %}
    {{ iface_name }}:
      interfaces: {{ item.bond_slaves }}
      parameters:
        mode: 802.3ad
        lacp-rate: fast
        mii-monitor-interval: 100
{{ generate_iface_config(item, iface_name) }}
{% endfor %}
{% endif %}
