 - name: prepare minio-docker directory
   file:
     path: /opt/minio-docker
     state: directory

 - name: get current minio version
   shell: 
     cmd: docker compose images | grep minio | awk '{print $3}'
     chdir: "/opt/minio-docker"
   check_mode: no
   failed_when: false
   changed_when: false
   register: res

 - set_fact:
     minio_running_version: "{{ res.stdout_lines[0] | default('') }}"

 - name: don't run upgrade unless minio_upgrade is set to 1
   fail:
     msg: "minio version mismatch and minio_upgrade is not set to 1"
   when: minio_running_version != "" and minio_running_version != minio_version and minio_upgrade != 1

 - name: generate docker-compose (single node cluster)
   copy:
     content: |
       services:
         minio:
           image: quay.io/minio/minio:{{ minio_version }}
           command: server --console-address ":9001" /data
           ports:
             - "8443:9000"
             - "443:9001"
           volumes:
             - data:/data
             - ./certs:/root/.minio/certs
           healthcheck:
             test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
             interval: 30s
             timeout: 20s
             retries: 3
           restart: unless-stopped
           environment:
             MINIO_ROOT_USER: "{{ minio_admin_user }}"
             MINIO_ROOT_PASSWORD: "{{ minio_admin_password }}"
             #VIRTUAL_HOST: "{{ inventory_hostname }}"
             #VIRTUAL_PORT: 8080
       volumes:
         data:
     dest: /opt/minio-docker/docker-compose.yml
   register: res

 - debug: 
     msg: will docker compose down
   when: minio_running_version != "" and res.changed

 - name: stop minio if running
   shell: 
     cmd: docker compose down
     chdir: /opt/minio-docker/
   when: res.changed and minio_running_version != ""

 - name: start minio
   shell: 
     cmd: docker compose up -d && sleep 30
     chdir: /opt/minio-docker/
   when: res.changed

