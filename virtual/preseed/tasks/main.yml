- name: make sure block device exists
  file:
    path: "{{ virtual.disk_blk | default('/dev/mapper/'+virtual.name) }}"

- name: "lock preseeding mutex for this vm"
  shell: "tempfile -n \"{{ virtual_dir }}/preseed/{{ virtual.name }}.lock\""
  ignore_errors: yes
  register: virtual_preseed_lock

- name: "check if configuration file is present"
  stat:
    path: "{{ virtual_dir }}/conf/{{ virtual.name }}.xml"
  register: virtual_existing_conf

- name: "check if libvirt knows this vm"
  virt:
    name: "{{ virtual.name }}"
    command: status
  ignore_errors: yes
  register: virtual_existing_vm

#- debug:
#    msg: "virtual_preseed_lock={{ virtual_preseed_lock }}"
#- debug:
#    msg: "virtual_existing_conf={{ virtual_existing_conf }}"
#- debug:
#    msg: "virtual_existing_vm={{ virtual_existing_vm }}"

- name: "run only when we got exclusive lock and no conf file is present"
  meta: end_host
  when: virtual_preseed_lock.rc|default(0) != 0 or virtual_existing_conf.stat.exists == True or 'status' in virtual_existing_vm 

- name: prepare preseed dir for this host
  file:
    path: "{{ virtual_dir }}/preseed/{{ virtual.name }}/"
    state: directory

- name: prepare preseed.cfg
  template:
    src: preseed.cfg
    dest: "{{ virtual_dir }}/preseed/{{ virtual.name }}/preseed.cfg"

- name: prepare setup.sh
  template:
    src: setup.sh
    dest: "{{ virtual_dir }}/preseed/{{ virtual.name }}/setup.sh"

- name: start virt-install
  shell: virt-install \
    --name="{{ virtual.name }}" \
    --arch=x86_64 \
    --vcpus="{{ virtual.cpus }}" \
    --ram="{{ virtual.ram }}" \
    --os-type=linux \
    --os-variant=ubuntuprecise \
    --virt-type kvm \
    --hvm \
    --connect=qemu:///system \
    --network=bridge:"{{ networking[virtual.default_interface].virtual_host_iface }}",model=virtio,mac={{ networking[virtual.default_interface].ether }} \
    --disk path="{{ virtual.disk_blk | default("/dev/mapper/"+virtual.name) }}",bus=virtio \
    --graphics=vnc,port=-1 \
    --video vmvga \
    --noautoconsole \
    --location="{{ virtual_image }}" \
    --initrd-inject="{{ virtual_dir }}/preseed/{{ virtual.name }}/preseed.cfg" \
    --initrd-inject="{{ virtual_dir }}/preseed/{{ virtual.name }}/setup.sh" \
    --extra-args="auto=true file=/preseed.cfg vga=788 DEBCONF_DEBUG=5 debian-installer/language=en debian-installer/country=SK console-setup/ask_detect=false keyboard-configuration/layoutcode=us debian-installer/locale=en_US.UTF-8 localechooser/preferred-locale=en_US.UTF8" \
    --noreboot

- name: wait for vm to finish preseeding
  virt:
    command: info
  register: virtual_install
  until: virtual_install[virtual.name].state == "shutdown"
  retries: 20
  delay: 60
