firewall_template: "fw.sh"

firewall_default_rule_input: "LOG_DROP"
firewall_default_rule_output: "LOG_WILL_DROP"
firewall_default_rule_forward: "LOG_DROP"

firewall_iptables: "$( which iptables )"
firewall6_iptables: "$( which ip6tables )"

firewall_ip_forward: 0
firewall_log_martians: 1

firewall_interfaces: "{{ networking }}"
firewall6_interfaces: {}

## EXAMPLES:
#firewall_interface:
#   mngPhys:
#     deny:
#     - 10.0.0.128/26
#     - 10.0.0.192/26
#     default: allow
#   mngHw:
#     allow: 10.0.0.64/26
#     allow_dhcp: true
#   iscsi0:
#     allow: 10.0.0.128/26
#   iscsi1:
#     allow: 10.0.0.192/26

#firewall_objects_example:
#   PUB: 10.0.0.0/24
#   DMZ:
#     - 10.0.1.0/24
#     - 10.0.2.0/24
#   ns.example.com:
#     10.0.1.34

#firewall_input_example:
#  - name: ssh from lan
#    src: LAN
#    proto:
#      tcp: 22
#  - name: elastic from DMZ segment
#    src: DMZ
#    dest: 10.10.10.0/24
#    proto: 
#      tcp: 9200, 9300
#      udp: 100:110
#    rule: LOG_ACCEPT

firewall_input: "{{ vars | select('match', '^firewall_input_') | map('extract', vars) | flatten }}"
firewall_output: "{{ vars | select('match', '^firewall_output_') | map('extract', vars) | flatten }}"
firewall_forward: "{{ vars | select('match', '^firewall_forward_') | map('extract', vars) | flatten }}"
firewall_objects: "{{ {} | combine(vars | select('match', '^firewall_objects_') | map('extract', vars) | list) }}"

firewall6_input: "{{ vars | select('match', '^firewall6_input_') | map('extract', vars) | flatten }}"
firewall6_output: "{{ vars | select('match', '^firewall6_output_') | map('extract', vars) | flatten }}"
firewall6_forward: "{{ vars | select('match', '^firewall6_forward_') | map('extract', vars) | flatten }}"
firewall6_objects: "{{ {} | combine(vars | select('match', '^firewall6_objects_') | map('extract', vars) | list) }}"
