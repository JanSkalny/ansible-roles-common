---
- name: install elasticsearch
  package:
    name: elasticsearch
    state: present
  tags: install

- name: configure jvm.options from pacakge source
  block:
    - set_fact:
        __elastic_jvmoptions: "./etc/elasticsearch/jvm.options"
      tags: configure

    - name: retrieve elasticsearch deb package
      check_mode: false
      command: "apt-get download elasticsearch"
      args:
        chdir: /tmp
      tags: configure

    - name: extract jvm.options original file
      check_mode: false
      shell: "dpkg-deb --fsys-tarfile elasticsearch_*.deb | tar -x {{ __elastic_jvmoptions }}"
      args:
        chdir: /tmp
      tags: configure

    - name: backup current jvm.options config
      copy:
        remote_src: true
        src: /etc/elasticsearch/jvm.options
        dest: /etc/elasticsearch/jvm.options.bak.ansible
      tags: configure

    - name: ensure original jvm.options is present
      copy:
        remote_src: true
        src: "/tmp/{{ __elastic_jvmoptions }}"
        dest: "/etc/elasticsearch/jvm.options"
      tags: configure

    - name: cleanup
      file:
        state: absent
        path: "{{ item }}"
      loop:
        - "/tmp/elasticsearch*.deb"
        - "/tmp/etc"
      tags: configure

- name: configure elastic
  template:
    src: "{{ item.src }}"
    dest: "/etc/elasticsearch/{{ item.dest }}"
  with_items:
    - src: elasticsearch.yml
      dest: elasticsearch.yml
    - src: jvm.options
      dest: jvm.options.d/jvm.options
  notify: restart elasticsearch
  tags: configure

- name: configure logging
  when: log4j2 is defined
  template:
    src: log4j2.properties.j2
    dest: "/etc/elasticsearch/log4j2.properties"
  notify: restart elasticsearch
  tags: configure

- name: remove limitations on memory
  template:
    src: "limits.conf"
    dest: "/etc/security/limits.d/elasticsearch.conf"
  notify: restart elasticsearch
  tags: configure

- name: load limits on session login
  lineinfile:
    path: "/etc/pam.d/common-session"
    line: "session required pam_limits.so"
  notify: restart elasticsearch
  tags: configure

- name: create data storage
  file:
    path: "{{ elastic.data_path }}"
    state: directory
    owner: elasticsearch
  notify: restart elasticsearch
  tags: configure

# toto uz netreba
- name: create tmp directory
  file:
    path: "/var/lib/elasticsearch/tmp"
    state: directory
    owner: elasticsearch
  notify: restart elasticsearch
  tags: never

- name: prepare systemd override directory
  file:
    path: "/etc/systemd/system/elasticsearch.service.d"
    state: directory
  tags: configure

- name: configure memlock
  copy:
    src: "override.conf"
    dest: "/etc/systemd/system/elasticsearch.service.d/override.conf"
  notify:
    - reload systemctl
    - restart elasticsearch
  tags: configure

- name: flush handlers
  meta: flush_handlers

#- name: change mem limits MAX_LOCKED_MEMORY=unlimited and LimitMEMLOCK=infinity

- name: enable services
  service:
    name: elasticsearch
    enabled: true
    state: started
  tags: configure, install
