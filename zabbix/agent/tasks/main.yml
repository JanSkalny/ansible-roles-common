# psk
- block:
  - name: generate PSK
    become: false
    shell: openssl rand -hex 48
    register: psk
    delegate_to: 127.0.0.1

  - set_fact:
      zabbix_agent_psk={{ psk.stdout }}
    ignore_errors: "{{ ansible_check_mode }}"

  - debug: var=zabbix_agent_psk
    run_once: true
  when:  not (zabbix_agent_psk is defined and zabbix_agent_psk != {} )

- debug: msg="ansible_distribution_release={{ ansible_distribution_release }}", verbosity=1

#TODO: check for presence of zabbix-agent2 package
- name: use zabbix-agent on older systems
  set_fact:
    zabbix_agent_version: 1
    zabbix_agent_name: "zabbix_agentd"
    zabbix_agent_service: "zabbix-agent"
  tags: configure
  when: "ansible_distribution_release == 'xenial' or ansible_distribution_release == 'trusty'"

- block:
    - name: remove older zabbix-agent
      package:
        name:
        - "zabbix-agent"
        state: absent
    - file:
        path: "/etc/zabbix/zabbix_agentd.conf"
        state: absent
    - file:
        path: "/etc/zabbix/zabbix_agentd.conf.dpkg-dist"
        state: absent
    - file:
        path: "/etc/zabbix/zabbix_agentd.d"
        state: absent
    - file:
        path: "/etc/zabbix/zabbix_agentd.psk"
        state: absent
  when: "not ( ansible_distribution_release == 'xenial' or ansible_distribution_release == 'trusty' )"

- name: install SW dependencies and tools
  package:
    name:
    - logtail
    - logrotate
    - sudo
    - jq
    - zabbix-sender
    - zabbix-get
    state: latest

- debug: msg="zabbix_agent_service={{ zabbix_agent_service }}", verbosity=1

- name: install zabbix-agent
  package:
    name:
    - "{{ zabbix_agent_service }}"
    state: latest
  notify: restart zabbix-agent

- block:
  - debug: msg="zabbix_etc_groups={{ zabbix_etc_groups }}", verbosity=1

  - name: ensure group exists
    group:
      name: "{{ item }}"
      state: present
    with_items: "{{ zabbix_etc_groups }}"

  - name: Add the user 'zabbix' to the groups
    user:
      name: zabbix
      groups: "{{ item }}"
      append: yes
    with_items: "{{ zabbix_etc_groups }}"

  when: zabbix_etc_groups is defined and zabbix_etc_group != {}

- name: make sure zabbix_agent.d directory is present
  file:
    path: "/etc/zabbix/{{ zabbix_agent_name }}.d/"
    state: directory
    mode: 0755
  when: zabbix_agent_name is defined

- name: make sure zabbix home directory is present
  file:
    path: "/var/lib/zabbix/"
    state: directory
    mode: 0700
    owner: zabbix
    group: zabbix

- block:
  - debug: msg="zabbix_templates_dir={{ zabbix_templates_dir }}", verbosity=1
  - debug: msg="zabbix_templates={{ zabbix_templates }}", verbosity=1

  - name: LOOP for ALL templates
    include_tasks: "template_loop.yml"
    #with_items: "{{ zabbix_templates }}"
    with_items: "{{ zabbix_merged_templates }}"
    vars:
      #zabbix_add_templates: "{{ vars | select('match', '^zabbix_templates_add_[a-z]*$') | map('extract', vars) | combine | flatten }}"
      zabbix_add_templates: "{{ vars | select('match', '^zabbix_templates_add_[a-z]*$') | map('extract', vars) | list | combine | flatten }}"
      zabbix_conv_templates: "{{ zabbix_templates | list }}"
      zabbix_merged_templates: "{{ zabbix_conv_templates + zabbix_add_templates }}"

  when: zabbix_templates_dir is defined and zabbix_templates is defined and zabbix_templates != {} and zabbix_templates_dir != {}

- name: configure zabbix-agent
  template:
    src: "zabbix_agent.conf"
    dest: "/etc/zabbix/{{ zabbix_agent_name }}.conf"
    owner: "zabbix"
    group: "zabbix"
    mode: u=rw,g=r,o=
  tags: configure
  notify: restart zabbix-agent

- name: save zabbix_agentd.psk
  template:
    src: "zabbix_agent.psk"
    dest: "/etc/zabbix/{{ zabbix_agent_name }}.psk"
    owner: "zabbix"
    group: "zabbix"
    mode: 0600
  when: zabbix_agent_psk is defined
  tags: configure
  notify: restart zabbix-agent

- name: rotate zabbix logs
  copy:
    src: logrotate
    dest: /etc/logrotate.d/{{ zabbix_agent_service }}
  tags: configure

- name: enable zabbix-agent service
  service:
    name: "{{ zabbix_agent_service }}"
    enabled: yes
  tags: configure
  notify: restart zabbix-agent
  when: zabbix_agent_service is defined
