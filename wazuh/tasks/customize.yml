- name: deploy docker.slice
  ansible.builtin.template:
    src: docker.slice.j2
    dest: /etc/systemd/system/docker.slice
    group: root
    owner: root
    mode: 0644
  register: slice

- name: create override directory
  ansible.builtin.file:
    owner: root
    group: root
    mode: 0755
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: deploy docker.service override template
  ansible.builtin.template:
    src: docker.conf.j2
    dest: /etc/systemd/system/docker.service.d/override.conf
    group: root
    owner: root
    mode: 0644

- name: reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: restart docker socket/service
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - docker.socket
    - docker.service
  when:
    slice.changed

- name: making sure wazuh manager is running
  fail:
    msg: "wazuh manager not running!"
  when: not wazuh_manager_is_running

- name: making sure wazuh etc volume is present
  fail:
    msg: "wazuh etc docker volume is not present"
  when: not wazuh_etc_is_present

- name: make sure test dir is present
  file:
    state: directory
    path: "/var/lib/docker/volumes/wazuh_wazuh_etc/_data/{{ item }}"
  with_items:
    - test/
    - test/rules/
    - test/decoders/

- name: generate config files for testing
  template:
    src: "{{ item.src }}"
    dest: "/var/lib/docker/volumes/wazuh_wazuh_etc/_data/test/{{ item.dest }}"
    owner: "{{ wazuh_uid }}"
    group: "{{ wazuh_uid }}"
  vars:
    wazuh_test_dir: "test/"
  with_items:
    - src: local_decoder.xml
      dest: decoders/local_decoder.xml
    - src: local_rules.xml
      dest: rules/local_rules.xml
    - src: "ossec.conf_{{ wazuh_version }}"
      dest: ossec.conf

- name: test configuration files
  community.docker.docker_container_exec:
    container: "wazuh.manager"
    command: "bash -c \"{{ item.cmd }}\""
    user: root
  with_items:
    - name: ossec.conf
      cmd: /var/ossec/bin/wazuh-csyslogd -t -c etc/test/ossec.conf
    - name: local_rules.xml
      cmd: /var/ossec/bin/wazuh-analysisd -t -c etc/test/ossec.conf
  changed_when: false
  register: res_tests

#- debug:
#    msg: "{{ res_tests }}"


## TODO: deleteme when we reach v4.13
- name: copy sensor-specific decoders to wazuh manager
  ansible.builtin.template:
    src: "{{ root_dir }}files/detection/wazuh/decoders/{{ item }}_decoders.xml"
    dest: "/var/lib/docker/volumes/wazuh_wazuh_etc/_data/decoders/{{ item }}_decoders.xml"
    owner: "{{ wazuh_uid }}"
    group: "{{ wazuh_uid }}"
  with_items: "{{ wazuh_decoders }}"
  when: wazuh_decoders is defined and wazuh_decoders | length > 0

- name: copy sensor-specific rules to wazuh manager
  ansible.builtin.template:
    src: "{{ root_dir }}files/detection/wazuh/rules/1-{{ item }}_rules.xml"
    dest: "/var/lib/docker/volumes/wazuh_wazuh_etc/_data/rules/1-{{ item }}_rules.xml"
    owner: "{{ wazuh_uid }}"
    group: "{{ wazuh_uid }}"
  with_items: "{{ wazuh_rules }}"
  when: wazuh_rules is defined and wazuh_rules | length > 0


- name: generate config files
  template:
    src: "{{ item.src }}"
    dest: "/var/lib/docker/volumes/wazuh_wazuh_etc/_data/{{ item.dest }}"
    owner: "{{ wazuh_uid }}"
    group: "{{ wazuh_uid }}"
  with_items:
    - src: local_decoder.xml
      dest: decoders/local_decoder.xml
    - src: local_rules.xml
      dest: rules/local_rules.xml
    - src: "ossec.conf_{{ wazuh_version }}"
      dest: ossec.conf
  notify: reconfigure wazuh manager


- name: copy wazuh_manager.conf to git repo
  ansible.builtin.template:
    src: "ossec.conf_{{ wazuh_version }}"
    dest: "/opt/wazuh-docker/single-node/config/wazuh_cluster/wazuh_manager.conf"
    owner: "root"
    group: "root"
  notify:
    - reconfigure wazuh manager
  register: manager_conf

- name: msg
  ansible.builtin.debug:
    msg: restart compose manually
  when: manager_conf.changed
