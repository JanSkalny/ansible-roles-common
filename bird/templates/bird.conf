log syslog all;

router id {{ bird_router_id }};

protocol device { 
}

protocol direct {
	interface "*";
}

protocol kernel {
	learn;
	scan time 20;
	import none;
	export all;
}

{% for filter_name, filter in bird_filters.items() %}
filter {{ filter_name }} {
{% if 'accept' in filter %}
{% for prefix in filter.accept %}
	if net ~ [ {{ prefix }} ] then accept;
{% endfor %}
	else reject;
{% else %}
{% for prefix in filter.reject %}
	if net ~ [ {{ prefix }} ] then reject;
{% endfor %}
	else accept;
{% endif %}
}
{% endfor %}

{% for instance_name, bgp_instance in bgp_instances.items() %}
template bgp {{ instance_name }}_peers {
	local as {{ bgp_instance.asn }};
	import keep filtered;
	startup hold time 0;
	hold time 10;
	debug off;
	default bgp_local_pref 10;
	direct;
}

{% for peer_name, bgp_peer in bgp_instance.peers.items() %}
protocol bgp {{ peer_name }} from {{ instance_name }}_peers {
	neighbor {{ bgp_peer.addr }} as {{ bgp_peer.asn }};

	next hop self;

{% if 'password' in bgp_peer %}
	password "{{ bgp_peer.password }}";
{% endif %}
{% if 'import' in bgp_peer %}
	import {{ bgp_peer.import }};
{% endif %}
{% if 'export' in bgp_peer %}
	export {{ bgp_peer.export }};
{% endif %}
}
{% endfor %}

{% endfor %}


{% for instance_name, ospf_instance in ospf_instances.items() %}
protocol ospf {{ instance_name }} {
{% if 'import' in ospf_instance %}
	import {{ ospf_instance.import }};
{% endif %}
{% if 'export' in ospf_instance %}
	export {{ ospf_instance.export }};
{% endif %}

{% for ospf_area in ospf_instance.areas %}
	area {{ ospf_area.id }} {
{% for ospf_iface in ospf_area.interfaces %}
		interface "{{ ospf_iface.name }}" {
			hello 5;
			retransmit 6;
			cost 10;
			transmit delay 5;
			dead 15;
			dead count 5;
			wait 50;
			type pointopoint;
{% if ospf_iface.stub | default(0) %}
			stub;
{% endif %}
{% if 'auth_md5' in ospf_iface %}
			authentication cryptographic; 
			password "{{ ospf_iface.auth_md5 }}" {
				id 1;
			};
{% endif %}
		};
{% endfor %}
	};
{% endfor %}
}
{% endfor %}
