
- name: install dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items:
  - python-mysqldb
  - logtail
  - sudo
  - jq

- name: make sure zabbix_agentd.d directory is present
  file:
    path: "/etc/zabbix/zabbix_agentd.d/"
    state: directory
    mode: 0755

- name: check if zabbix-release is available
  command: dpkg-query -W zabbix-release
  register: res
  ignore_errors: True

- name: download zabbix release packae
  get_url:
    url: "http://repo.zabbix.com/zabbix/3.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.4-1+xenial_all.deb"
    dest: "/tmp/zabbix-release.deb"
  when: res|failed

- name: install zabbix-release.deb
  apt:
    deb: "/tmp/zabbix-release.deb"
  when: res|failed

- name: apt-get update
  apt:
    update_cache: yes
  when: res|failed

- name: install zabbix packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
  - zabbix-agent
  - zabbix-sender
  notify: restart zabbix-agent

- name: configure zabbix-agent
  template:
    src: "zabbix_agentd.conf"
    dest: "/etc/zabbix/zabbix_agentd.conf"
  notify: restart zabbix-agent

- name: delete default user parameter files
  file:
    path: "/etc/zabbix/zabbix_agentd.d/{{item}}"
    state: absent
  with_items:
  - userparameter_mysql.conf
  - zabbix_mdraid.conf
  notify: restart zabbix-agent

- name: custom user parameters
  copy:
    src: "conf/{{ item }}"
    dest: "/etc/zabbix/zabbix_agentd.d/{{ item }}"
    owner: "root"
    group: "zabbix"
    mode: 0640
  with_items:
  - bind.conf
  - mdraid.conf
  - apache.conf
  - mysql.conf
  - postfix.conf
  - kvm.conf
  - apcupsd.conf
  - smartctl.conf
  - bacula.conf
  - hplog.conf
  - hpacucli.conf
  - ssacli.conf
  - openvpn.conf
  - vfs.conf
  - sockstat.conf
  - varnish.conf
  notify: restart zabbix-agent

- name: custom user parameters (from templates)
  template:
    src: "{{ item }}"
    dest: "/etc/zabbix/zabbix_agentd.d/{{ item }}"
    owner: "root"
    group: "zabbix"
    mode: 0640
  with_items:
  - "ntp.conf"
  notify: restart zabbix-agent

- name: monitoring scripts
  copy:
    src: "scripts/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: "root"
    mode: 0755
  with_items:
  - zabbix_mdraid.sh
  - zabbix_bind_stats.py
  - zabbix_check_apache
  - zabbix_kvm.py
  - zabbix_postfix.sh
  - zabbix_smartctl.sh
  - zabbix_hplog.sh
  - zabbix_hpacucli.sh
  - zabbix_ssacli.sh
  - zabbix_openvpn.sh
  - zabbix_bacula_discovery.sh
  - zabbix_bacula_check_job.sh
  - zabbix_varnish_cache.py
  notify: restart zabbix-agent

- name: make sure zabbix home directory is present
  file:
    path: "/var/lib/zabbix/"
    state: directory
    mode: 0700
    owner: zabbix
    group: zabbix

- name: create mysql user for monitoring
  mysql_user:
    name: "{{ monitor_sql_user }}"
    password: "{{ monitor_sql_password }}"
    priv: '*.*:USAGE'
    state: present
    login_user: "{{ mysql_user }}"
    login_password: "{{ mysql_password }}"
  when: monitor_sql_password is defined

- name: generate .my.cnf for monitoring
  template:
    src: "my.cnf"
    dest: "/var/lib/zabbix/.my.cnf"
    owner: "zabbix"
    group: "zabbix"
    mode: 0600
  when: monitor_sql_password is defined

- name: generate zabbix_agentd.psk
  template:
    src: "zabbix_agentd.psk"
    dest: "/etc/zabbix/zabbix_agentd.psk"
    owner: "zabbix"
    group: "zabbix"
    mode: 0600
  when: monitor_psk is defined
  notify: restart zabbix-agent

- name: enable zabbix-agent service
  service:
    name: "zabbix-agent"
    enabled: yes
  notify: restart zabbix-agent

- name: allow zabbix user to run specific commands as root
  copy:
    src: "zabbix_sudoers"
    dest: "/etc/sudoers.d/zabbix"
    owner: "root"
    mode: 0640

