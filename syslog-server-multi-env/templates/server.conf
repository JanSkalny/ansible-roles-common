# auto-generated by Ansible. Do not edit.

source s_net_tcp {
    network(
        ip("{{ syslog_bind }}")
        port({{ syslog_port }})
        transport("tcp")
        max-connections({{ syslog_max_connections }})
    );
};

# TODO: otestovat ci in-list ( host.identities, value("HOST_FROM") je rychlejsi

{% for syslog_env in syslog_envs %}
{% if syslog_env.addrs %}
# {{ syslog_env.name }}
filter f_{{ syslog_env.name | hash('md5') }} {
    {{ syslog_env.addrs | map('regex_replace', '^(.*)$', '"${HOST_FROM}" eq "\\1"') | join(' or ') }};
};
{% endif %}
{% endfor %}

filter f_unmatched {
    match("--" value("HOST"));
};

rewrite r_multi_env {
{% for syslog_env in syslog_envs %}
{% if syslog_env.addrs %}
    set("{{ syslog_env.name }}--$HOST" value("HOST") condition(filter(f_{{ syslog_env.name | hash('md5')}})));
{% endif %}
{% endfor %}
    set("unmatched--$HOST" value("HOST") condition(not(filter(f_unmatched))));
};

destination d_logs {
    file("{{ syslog_dir }}/${HOST}.log");
};

log {
    source(s_net_tcp);
    rewrite(r_multi_env);
    destination(d_logs);
};
