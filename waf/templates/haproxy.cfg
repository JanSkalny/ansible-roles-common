global
  log /dev/log  local0
  log /dev/log  local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon
  maxconn 4096
{% if waf_letsencrypt %}
  crt-base /var/lib/acme/live/
{% else %}
  crt-base /etc/ssl/private/
{% endif %}
  ssl-default-bind-options no-sslv3
  ssl-default-bind-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-server-options no-sslv3
  ssl-default-server-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  tune.ssl.default-dh-param 2048

defaults
  log global
  mode http
  option httplog
  option dontlognull
  timeout http-request 5s
  timeout http-keep-alive 10s
  timeout connect 5s
  timeout server 30s
  timeout client 10s
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

frontend waf_front
  bind 0.0.0.0:443 ssl 
{%- for host in waf_domains %}
{%- if 'https' in host and host.https %}
 crt {{ host.domain }}{{ "/haproxy" if waf_letsencrypt else ".pem" }}
{%- endif %}
{% endfor %}

  rspadd Strict-Transport-Security:\ max-age=31536000
  rsprep ^Set-Cookie:\ (.*) Set-Cookie:\ \1
  default_backend varnish

backend varnish
  mode http
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  http-request add-header X-Client-IP %[src]
  server varsnish 127.0.0.1:6081 


frontend tls
  bind 127.0.0.1:10444
{% for host in waf_domains %}
  use_backend tls_{{ host.backend }} if { hdr(Host) -i {{ host.domain }} }
{% endfor %}
  # default_backend tls_out

{% for backend in waf_backends %}
backend tls_{{ backend.name }}
  mode http
  option forwardfor
  server tls_{{ backend.name }} {{ backend.host }}:{{ backend.https_port | default(443) }} ssl {{ "verify none" if not ('https_verify' in backend and backend.https_verify) else "" }}

{% endfor %}

# default backend - use header
#backend tls_out
#  mode http
#  option forwardfor
#  server tls_out %[hdr(X-Forwarded-For)]:443 ssl verify none


